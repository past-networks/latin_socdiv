mutate(status_clean = str_replace_all(string = status, pattern = "\\?", replacement = "")) %>%
ggplot(aes(y=status_clean, fill = occups_cats)) +
geom_bar(position =  "fill") +
theme_linedraw(base_size = 6) +
labs(x = "Ratio", y = "Status on inscriptions", title = "Status of occupational groups (based on the EDH dataset)", subtitle = ggtitle(paste("n =", nrow(LIST_occups_and_status), "inscriptions with occupation and status")))
LIST_all_people_harris %>%
select(status, occups_cats) %>%
filter(!is.na(occups_cats)) %>%
count(occups_cats, status, sort = TRUE)
LIST_all_people_harris %>%
filter(!is.na(occups_cats)) %>%
filter(!is.na(status))
# exploring Augustales
LIST_all_people_harris %>%
filter(status=="Augustales") %>%
filter(!is.na(occups_cats)) %>%
count(occups_cats, sort = TRUE) %>%
mutate(ratio_all = format(n/(nrow(LIST_occups_and_status/100)), scientific=FALSE) ) %>% mutate(ratio_category = format(n/(nrow(augustales)/100), scientific=FALSE) )
mutate(ratio_all = format(n/(nrow((LIST_occups_and_status/100)), scientific=FALSE) ) %>% mutate(ratio_category = format(n/(nrow(augustales)/100), scientific=FALSE) )
# exploring military personnel, #ratio of all people that have both status an occupation mentioned in the inscription and ratio of people within the occupational category
LIST_all_people_harris %>%
filter(status=="military personnel") %>%
filter(!is.na(occups_cats)) %>%
count(occups_cats, sort = TRUE) %>%
mutate(ratio_all = format(n/(nrow(LIST_occups_and_status)/100), scientific=FALSE) ) %>% mutate(ratio_category = format(n/(nrow(military_personnel)/100), scientific=FALSE) )
mutate(ratio_all = format(n/(nrow((LIST_occups_and_status/100)), scientific=FALSE) ) %>% mutate(ratio_category = format(n/(nrow(military_personnel)/100), scientific=FALSE) )
mutate(ratio_all = format(n/(nrow((LIST_occups_and_status/100)), scientific=FALSE) ) %>% mutate(ratio_category = format(n/(nrow(military_personnel)/100), scientific=FALSE) )
)
mutate(ratio_all = format(n/(nrow((LIST_occups_and_status)/100), scientific=FALSE) ) %>% mutate(ratio_category = format(n/(nrow(military_personnel)/100), scientific=FALSE) )
# exploring military personnel, #ratio of all people that have both status an occupation mentioned in the inscription and ratio of people within the occupational category
LIST_all_people_harris %>%
filter(status=="military personnel") %>%
filter(!is.na(occups_cats)) %>%
count(occups_cats, sort = TRUE) %>%
mutate(ratio_all = format(n/(nrow(LIST_occups_and_status)/100), scientific=FALSE) ) %>% mutate(ratio_category = format(n/(nrow(military_personnel)/100), scientific=FALSE) )
# exploring freedmen
LIST_all_people_harris %>%
filter(status=="freedmen / freedwomen") %>%
filter(!is.na(occups_cats)) %>%
count(occups_cats, sort = TRUE) %>%
mutate(ratio_all = format(n/(nrow(LIST_occups_and_status)/100), scientific=FALSE) ) %>% mutate(ratio_category = format(n/(nrow(freedmen)/100), scientific=FALSE) )
# exploring Augustales
LIST_all_people_harris %>%
filter(status=="Augustales") %>%
filter(!is.na(occups_cats)) %>%
count(occups_cats, sort = TRUE) %>%
mutate(ratio_all = format(n/(nrow(LIST_occups_and_status)/100), scientific=FALSE) ) %>% mutate(ratio_category = format(n/(nrow(augustales)/100), scientific=FALSE) )
# exploring slaves
LIST_all_people_harris %>%
filter(status=="slaves") %>%
filter(!is.na(occups_cats)) %>%
count(occups_cats, sort = TRUE) %>%
mutate(ratio_all = format(n/(nrow(LIST_occups_and_status)/100), scientific=FALSE) ) %>% mutate(ratio_category = format(n/(nrow(slaves)/100), scientific=FALSE) )
# exploring senators
LIST_all_people_harris %>%
filter(status=="senatorial order") %>%
filter(!is.na(occups_cats)) %>%
count(occups_cats, sort = TRUE) %>%
mutate(ratio_all = format(n/(nrow(LIST_occups_and_status)/100), scientific=FALSE) ) %>% mutate(ratio_category = format(n/(nrow(senators)/100), scientific=FALSE) )
# status of all people
LIST_all_people_harris %>%
select(status, occups_cats) %>%
filter(!is.na(status))
LIST_all_people_harris
# status of all people
LIST_all_people_harris / LIST_all_people_harris %>% filter(!is.na(status))
# status of all people
LIST_all_people_harris / (LIST_all_people_harris %>% filter(!is.na(status)))
# status of all people
nrow(LIST_all_people_harris) / nrow(LIST_all_people_harris %>% filter(!is.na(status)))
# people with status
people_status <- LIST_all_people_harris %>%
select(status, occups_cats) %>%
filter(!is.na(status))
people_status %>%
count(occups_cats)
people_status %>%
count(occups_cats, sort = T)
people_status %>%
count(occups_cats, sort = T) %>%
mutate(ratio = n/(sum(n)/100))
people_status %>%
count(occups_cats, sort = T) %>%
mutate(ratio = round(n/(sum(n)/100)),2)
people_status %>%
count(occups_cats, sort = T) %>%
mutate(ratio = round(n/(sum(n)/100),2))
LIST_all_people_harris %>%
select(status, occups_cats) %>%
filter(!is.na(status))
people_status <- LIST_all_people_harris %>%
select(status, occups_cats)
people_status %>%
count(occups_cats, sort = T) %>%
mutate(ratio = round(n/(sum(n)/100),2))
# people with status
people_status <- LIST_all_people_harris %>%
select(status, occups_cats) %>%
filter(!is.na(status))
people_status %>%
count(occups_cats, sort = T) %>%
mutate(ratio = round(n/(sum(n)/100),2))
people_status %>%
count(status, sort = T) %>%
mutate(ratio = round(n/(sum(n)/100),2))
people_status %>%
count(status, sort = T) %>%
mutate(ratio = round(n/(sum(n)/100),2)) %>%
View()
count(status_clean, sort = T) %>%
mutate(ratio = round(n/(sum(n)/100),2)) %>%
View()
people_status %>%
mutate(status_clean = str_replace_all(string = status, pattern = "\\?", replacement = ""))
count(status_clean, sort = T) %>%
mutate(ratio = round(n/(sum(n)/100),2)) %>%
View()
people_status_clean<- people_status %>%
mutate(status_clean = str_replace_all(string = status, pattern = "\\?", replacement = ""))
people_status_clean<- people_status %>%
mutate(status_clean = str_replace_all(string = status, pattern = "\\?", replacement = "")) %>%
count(status_clean, sort = T) %>%
mutate(ratio = round(n/(sum(n)/100),2)) %>%
View()
people_status_clean<- people_status %>%
mutate(status_clean = str_replace_all(string = status, pattern = "\\?", replacement = "")) %>%
count(status_clean, sort = T) %>%
mutate(ratio = round(n/(sum(n)/100),2))
#save the results
write.csv(people_status_clean, "LIST_status_people_clean.csv",row.names = TRUE)
people_status %>%
count(status, occups_cats, sort = T)
people_status %>%
filter(!is.na(occups_cats)) %>%
count(status, occups_cats, sort = T)
people_status %>%
filter(!is.na(occups_cats)) %>%
count(status, occups_cats, sort = T) %>%
mutate(ratio = round(n/(sum(n)/100),2))
people_status %>%
filter(!is.na(occups_cats)) %>%
mutate(status_clean = str_replace_all(string = status, pattern = "\\?", replacement = "")) %>%
count(status_clean, occups_cats, sort = T) %>%
mutate(ratio = round(n/(sum(n)/100),2))
people_status %>%
filter(!is.na(occups_cats)) %>%
mutate(status_clean = str_replace_all(string = status, pattern = "\\?", replacement = "")) %>%
count(status_clean, sort = T) %>%
mutate(ratio = round(n/(sum(n)/100),2))
knitr::opts_chunk$set(echo = TRUE)
library(sf)
library(sfarrow)
library(tidyverse)
library(jsonlite)
library(tidyr)
library(ggplot2)
library(viridis)
unnest(LIST$occups[1:10])
unnest(LIST$occups[,1:10])
unnest(LIST$occups[1:10,])
unnest(LIST$occups[1,])
unnest(LIST$occups[1])
unnest(head(LIST$occups))
knitr::opts_chunk$set(echo = TRUE)
library(sf)
library(sfarrow)
library(tidyverse)
library(jsonlite)
library(tidyr)
library(ggplot2)
library(viridis)
unnest(head(LIST$occups))
LISThead <- head(LIST)
unnest(LISThead)
unnest(LISThead$occups)
unnest_auto(LISThead$occups)
unnest_auto(LISThead$occups, col = occups)
unlist(LISThead$occups, col = occups)
unlist(LISThead$occups)
insc_occups <-unlist(LISThead$occups)
insc_occups <-unlist(LIST$occups)
insc_occups
length(unlist(LIST$occups_N))
sum(unlist(LIST$occups_N))
summary(unlist(LIST$occups_N))
table(unlist(LIST$occups_N))
# how many occupations occurrences in total (counting the multiple occurrences on inscriptions)
sum(table(unlist(LIST$occups_N)))
# how many occupations occurrences in total (counting the multiple occurrences on inscriptions)
table(unlist(LIST$occups_N))
unlist(LIST$occups_N)
count(unlist(LIST$occups_N))
sum(unlist(LIST$occups_N))
length(unlist(LIST$occups_N))
summary(unlist(LIST$occups_N))
sum(unlist(LIST$occups_N))
nrow(unlist(LIST$occups_N))
occupsN <- unlist(LIST$occups_N)
occupsN
sum(occupsN)
occupsN <- as.data.frame(unlist(LIST$occups_N))
sum(occupsN)
View(occupsN)
occups <- as.data.frame(unlist(LIST$occups))
View(occups)
LIST %>%
unnest_longer(occups)
LIST %>%
unnest_longer(as.list(occups))
LIST %>%
unnest_longer(unlist(occups))
LIST %>%
unnest_longer(occups)
LIST %>%
unnest_wider(occups)
LIST %>%
unnest_auto(occups)
LIST %>%
unnest_auto(occups, col=occups)
LIST %>%
unnest_auto(occups, col=occups)
LIST %>%
unnest_auto(occups, col="occups")
LIST %>%
unnest_auto(occups)
LIST %>%
unnest(occups)
LIST %>%
select(LIST.ID, occups)
LIST %>%
select(LIST-ID, occups)
LIST %>%
select(`LIST-ID`, occups)
LIST %>%
select(`LIST-ID`, occups) %>%
unnest('LIST-ID')
LIST %>%
select(`LIST-ID`, occups) %>%
unnest('LIST-ID') %>%
unnest(occups)
LIST %>%
select(`LIST-ID`, occups) %>%
unnest('LIST-ID')
LIST %>%
select(`LIST-ID`, occups) %>%
unnest('LIST-ID') %>%
filter(occups == <chr [1]>)
LIST %>%
select(`LIST-ID`, occups) %>%
unnest('LIST-ID') %>%
unnest(occups, keep_empty = TRUE)
library(rrapply)
install.packages("rraply")
LIST %>%
select(`LIST-ID`, occups) %>%
unnest('LIST-ID') %>%
unnest_wider(occups)
occupsN <- as.data.frame(unlist(LIST$occups_N)) # total N of occurrences of occupations, 10352
occups <- as.data.frame(unlist(LIST$occups)) # total occupations, 10352
# how many inscriptions with occupations (possible multiple per inscription)
length(unlist(LIST$occups))
# how many occupations occur on inscription (counting the multiple occurrences on inscriptions)
table(unlist(LIST$occups_N))
# how many unique occupations there are
length(unique(unlist(LIST$occups)))
# what those are
unique(unlist(LIST$occups))
occupsN <- as.data.frame(unlist(LIST$occups_N)) # total N of occurrences of occupations, 10352
occups <- as.data.frame(unlist(LIST$occups)) # total occupations, 10352
# how many inscriptions with occupations (possible multiple per inscription)
length(unlist(LIST$occups))
# how many occupations occur on inscription (counting the multiple occurrences on inscriptions)
table(unlist(LIST$occups_N))
# how many unique occupations there are
length(unique(unlist(LIST$occups)))
# how many inscriptions with occupations (possible multiple per inscription)
length(unlist(LIST$occups))
# how many occupations occur on inscription (counting the multiple occurrences on inscriptions)
table(unlist(LIST$occups_N))
# how many unique occupations there are
length(unique(unlist(LIST$occups)))
read_csv("LISTsample_occups.csv")
occups<- read_csv("LISTsample_occups.csv")
nrow(occups)
nrow(occups) # alternative way, should be the same number
occups<- read_csv("LISTsample_occups.csv")
# how many instances of occupations
length(unlist(LIST$occups))
nrow(occups) # alternative way, should be the same number
# how many occupations occur on inscription (counting the multiple occurrences on inscriptions)
table(unlist(LIST$occups_N))
# how many unique occupations there are
length(unique(unlist(LIST$occups)))
# how many instances of occupations
length(unlist(LIST$occups))
nrow(occups) # alternative way, should be the same number
occups<- read_csv("LISTsample_occups.csv")
# how many instances of occupations
length(unlist(LIST$occups))
nrow(occups) # alternative way, should be the same number
# how many instances of occupations
length(unlist(LIST$occups))
nrow(occups) # alternative way, should be the same number
unique(occups$`LIST-ID`)
length(unique(occups$`LIST-ID`))
# how many occupations occur on inscription (counting the multiple occurrences on inscriptions)
table(unlist(LIST$occups_N))
# how many occupations occur on inscription (counting the multiple occurrences on inscriptions)
table(unlist(LIST$occups_N))
# how many unique occupations there are
length(unique(unlist(LIST$occups)))
length(unique(occups$occups))
# how many unique occupations there are
length(unique(unlist(LIST$occups)))
length(unique(occups$occups)) # alternative way, should be the same number
# how many instances of occupations
length(unlist(LIST$occups))
nrow(occups) # alternative way, should be the same number
summary(table(LIST$occups_N))
summary(table(LIST$occups_N))
table(occups)
summary(table(occups$occups))
table(occups$occups)
summary(occups$occups)
summary(table(occups$occups))
sort(table(occups$occups))
sort(table(occups$occups), desc=TRUE)
sort(table(occups$occups))
desc(table(occups$occups))
sort(table(occups$occups))
# all inscriptions contained in the dataset
nrow(LIST)
LISTjson <- fromJSON("../../data/large_data/LIST_occupsorgs_industry_harris_people_20231206.json") # with people, Harris cats
LISTjson <- fromJSON("../../data/large_data/LIST_occupsorgs_industry_harris_people_20231206.json") # with people, Harris cats
LIST <- as_tibble(LISTjson)
LISTjson <- fromJSON("../../data/large_data/LIST_occupsorgs_industry_harris_people_20231206.json") # with people, Harris cats
LIST <- as_tibble(LISTjson)
View(LIST)
knitr::opts_chunk$set(echo = TRUE)
library(sf)
library(sfarrow)
library(tidyverse)
library(jsonlite)
library(tidyr)
library(ggplot2)
library(viridis)
#LISTjson <- fromJSON("../../data/large_data/LIST_occupsorgs_industry_simple_20231206.json") # without people
#LISTjson <- fromJSON("../../data/large_data/LIST_occupsorgs_industry_people_20231206.json") # with people, HISCO cats
LISTjson <- fromJSON("../../data/large_data/LIST_occupsorgs_industry_harris_people_20231206.json") # with people, Harris cats
LIST <- as_tibble(LISTjson)
View(LIST_all_people_harris)
View(LIST)
names(LIST)
LISTjson <- fromJSON("../../data/large_data/LIST_occupsorgs_industry_people_20231206.json") # with people, Harris cats
LIST <- as_tibble(LISTjson)
# all inscriptions contained in the dataset
nrow(LIST)
names(LIST)
LISTorig <- sf_read_parquet("../../data/large_data/LIST_v1-0.parquet")
LISTorig <- st_read_parquet("../../data/large_data/LIST_v1-0.parquet")
nrow(LISTorig)
LISTall<- left_join(LISTorig, LIST)
LISTall<- left_join(LISTorig, LIST, by = "LIST-ID")
LISTorig
LISTall<- left_join(LISTorig, LIST, by = "LIST.ID")
LISTall<- left_join(LISTorig, LIST, by = c("LIST.ID", "LIST-ID"))
names(LISTorig)
rename(LISTorig$LIST.ID, LISTorig$LIST-ID)
rename(LISTorig$LIST.ID, "LIST-ID")
colnames(LISTorig$LIST.ID) <- "LIST-ID"
colnames(LISTorig$LIST.ID) <- "LIST-ID"
LISTorig <- rename(LISTorig, c("LIST.ID" = "LIST-ID"))
LISTorig <- rename(LISTorig, c("LIST.ID" = "LIST-ID"))
names(LISTorig)
LISTorig <- rename(LISTorig, c("LIST.ID" = "LIST-ID"))
LISTorig <- rename(LISTorig, c("LIST-ID" = "LIST.ID"))
names(LISTorig)
LISTall<- left_join(LISTorig, LIST, by = "LIST-ID")
LISTall<- left_join(LISTorig, LIST, by = "LIST-ID")
LIST$`LIST-ID` <- unlist(LIST$`LIST-ID`)
LISTall<- left_join(LISTorig, LIST, by = "LIST-ID")
names(LISTall)
datesall<- LISTall %>%
select(not_before, not_after) %>%
order(not_before)
datesall<- LISTall %>%
select(not_before, not_after) %>%
order(not_before)
datesall<- LISTall %>%
select(not_before, not_after)
View(datesall)
table(datesall)
table(datesall$not_before)
table(datesall$not_after)
table(datesall$not_after) > 476
datesall %>%
filter(not_after > 476)
datesall %>%
filter(not_after > 476) %>%
count()
datesall %>%
filter(not_after > 476)
datesall %>%
filter(not_after > 1000) %>%
count() # 24491 inscr after 476 AD with some nonsensical
datesall %>%
filter(not_after > 900) %>%
count() # 24491 inscr after 476 AD with some nonsensical
datesall %>%
filter(not_after > 700) %>%
count() # 24491 inscr after 476 AD with some nonsensical
datesall %>%
filter(not_after > 800) %>%
count() # 24491 inscr after 476 AD with some nonsensical
datesall %>%
filter(not_after > 800) %>%
View() # 24491 inscr after 476 AD with some nonsensical
LISTall %>%
filter(not_after > 800)
LISTall %>%
filter(not_after > 800) %>%
View()
LISTall %>%
filter(not_after > 1000) %>%
View()
LISTall %>%
filter(not_after > 2000) %>%
View()
knitr::opts_chunk$set(echo = TRUE)
library(sf)
library(sfarrow)
library(tidyverse)
library(jsonlite)
library(tidyr)
library(ggplot2)
library(viridis)
occups<- read_csv("LISTsample_occups.csv")
# how many instances of occupations
length(unlist(LIST$occups))
nrow(occups) # alternative way, should be the same number
# how many inscriptions with occupations (possible multiple per inscription)
length(unique(occups$`LIST-ID`))
# how many unique occupations there are
length(unique(unlist(LIST$occups)))
length(unique(occups$occups)) # alternative way, should be the same number
# counts by occupation
sort(table(occups$occups))
!is.na(occups$occups)
!omit.na(occups$occups)
!na.omit(occups$occups)
na.omit(occups$occups)
occups %>%
filter(occups = NA)
occups %>%
filter(occups = "faber")
occups %>%
filter(occups == "faber")
occups %>%
filter(occups == "NA")
occups %>%
filter(occups == NA)
occups %>%
sort(occups)
View(occups)
LIST %>%
filter(occups == NA)
LIST
LIST %>%
unnest(occups)
unnest(LIST, occups)
unnest_auto()LIST, occups)
unnest_auto(LIST, occups)
View(all_occups)
View(occupsN)
unlist(LIST$occups)
unnest_longer(LIST$occups)
knitr::opts_chunk$set(echo = TRUE)
library(sf)
library(sfarrow)
library(tidyverse)
library(jsonlite)
library(tidyr)
library(ggplot2)
library(viridis)
LIST %>% unnest_longer(LIST$occups)
LIST %>% unnest_longer(occups)
LIST %>% unnest_auto(occups)
LIST %>%
select(LIST-ID, type_of_inscription_auto, occups)
LIST %>%
select(`LIST-ID`, type_of_inscription_auto, occups) %>%
unlist() %>%
table()
LIST %>%
select(`LIST-ID`, type_of_inscription_auto, occups)
LIST %>%
select(`LIST-ID`, type_of_inscription_auto, occups) %>%
unlist(type_of_inscription_auto)
LIST %>%
select(`LIST-ID`, type_of_inscription_auto, occups) %>%
unlist(type_of_inscription_auto)
LIST %>%
select(`LIST-ID`, type_of_inscription_auto) %>%
unlist(type_of_inscription_auto)
LIST %>%
select(`LIST-ID`, type_of_inscription_auto) %>%
unlist(type_of_inscription_auto)
LIST %>%
select(`LIST-ID`, `type_of_inscription_auto`) %>%
unlist(type_of_inscription_auto)
View(LIST)
View(LIST_occups_and_status)
